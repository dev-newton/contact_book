{"ast":null,"code":"import _classCallCheck from \"/Users/devnewton/Desktop/contact_book/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/devnewton/Desktop/contact_book/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/devnewton/Desktop/contact_book/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/devnewton/Desktop/contact_book/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/devnewton/Desktop/contact_book/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/devnewton/Desktop/contact_book/client/src/components/AllContacts.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Navbar.css\";\n\nvar AllContacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllContacts, _Component);\n\n  function AllContacts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllContacts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllContacts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      contacts: []\n    };\n\n    _this.getContacts = function () {\n      axios.get(\"/api/contacts\").then(function (res) {\n        return _this.setState({\n          contacts: res.data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllContacts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getContacts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var contact = React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          marginLeft: \"100px\"\n        },\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"+ New Contact\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        style: {\n          alignItems: \"left\"\n        },\n        width: \"50%\",\n        className: \"table table-bordered table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Residential Address\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.contacts.map(function (contact) {\n        return React.createElement(\"tr\", {\n          align: \"left\",\n          key: contact._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, contact.full_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, contact.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, contact.phone_number), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, contact.address));\n      })))));\n      var no_contact = React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"##d3d3d3\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"No Contacts Available.....\"));\n      return this.state.contacts.length > 0 ? contact : no_contact;\n    }\n  }]);\n\n  return AllContacts;\n}(Component);\n\nexport default AllContacts;","map":{"version":3,"sources":["/Users/devnewton/Desktop/contact_book/client/src/components/AllContacts.js"],"names":["React","Component","Link","axios","AllContacts","state","contacts","getContacts","get","then","res","setState","data","contact","marginLeft","alignItems","map","_id","full_name","email","phone_number","address","no_contact","color","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAORC,W,GAAc,YAAM;AAClBJ,MAAAA,KAAK,CACFK,GADH,CACO,eADP,EAEGC,IAFH,CAEQ,UAAAC,GAAG;AAAA,eAAI,MAAKC,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEI,GAAG,CAACE;AAAhB,SAAd,CAAJ;AAAA,OAFX;AAGD,K;;;;;;;wCARmB;AAClB,WAAKL,WAAL;AACD;;;6BAQQ;AACP,UAAIM,OAAO,GACT;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAf;AAAwC,QAAA,SAAS,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,SAAS,EAAC,kCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,CADF,CALF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwB,UAAAH,OAAO;AAAA,eAC9B;AAAI,UAAA,KAAK,EAAC,MAAV;AAAiB,UAAA,GAAG,EAAEA,OAAO,CAACI,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,OAAO,CAACK,SAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKL,OAAO,CAACM,KAAb,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKN,OAAO,CAACO,YAAb,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKP,OAAO,CAACQ,OAAb,CAJF,CAD8B;AAAA,OAA/B,CADH,CAbF,CAPF,CADF,CADF;AAoCA,UAAIC,UAAU,GACZ;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF;AAKA,aAAO,KAAKlB,KAAL,CAAWC,QAAX,CAAoBkB,MAApB,GAA6B,CAA7B,GAAiCX,OAAjC,GAA2CS,UAAlD;AACD;;;;EAzDuBrB,S;;AA4D1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Navbar.css\";\n\nclass AllContacts extends Component {\n  state = {\n    contacts: []\n  };\n  componentDidMount() {\n    this.getContacts();\n  }\n\n  getContacts = () => {\n    axios\n      .get(\"/api/contacts\")\n      .then(res => this.setState({ contacts: res.data }));\n  };\n\n  render() {\n    var contact = (\n      <div className=\"main\">\n        <div className=\"container\">\n          <div>\n            <button style={{ marginLeft: \"100px\" }} className=\"btn btn-success\">\n              + New Contact\n            </button>\n          </div>\n          <br />\n          <table\n            style={{ alignItems: \"left\" }}\n            width=\"50%\"\n            className=\"table table-bordered table-hover\"\n          >\n            <thead>\n              <tr align=\"left\">\n                <th>Full Name</th>\n                <th>Email Address</th>\n                <th>Phone Number</th>\n                <th>Residential Address</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.contacts.map(contact => (\n                <tr align=\"left\" key={contact._id}>\n                  <td>{contact.full_name}</td>\n                  <td>{contact.email}</td>\n                  <td>{contact.phone_number}</td>\n                  <td>{contact.address}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n    var no_contact = (\n      <div className=\"main\">\n        <h1 style={{ color: \"##d3d3d3\" }}>No Contacts Available.....</h1>\n      </div>\n    );\n    return this.state.contacts.length > 0 ? contact : no_contact;\n  }\n}\n\nexport default AllContacts;\n"]},"metadata":{},"sourceType":"module"}